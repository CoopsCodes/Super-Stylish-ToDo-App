{"version":3,"sources":["Components/Header.js","Components/Action.js","Components/Option.js","Components/Options.js","Components/AddOption.js","Components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","title","subTitle","Action","onClick","handlePick","disabled","hasOptions","Option","count","optionText","e","handleDeleteOption","Options","handleDeleteAll","options","length","map","o","index","key","AddOption","state","error","undefined","handleAddOption","preventDefault","option","target","addOption","value","trim","setState","console","log","this","onSubmit","input","name","React","Component","OptionModal","isOpen","selected","onRequestClose","closeModal","contentLabel","closeTimeoutMS","App","selectedOption","componentDidMount","json","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","prevState","stringify","setItem","randomNum","Math","floor","random","optionToRemove","filter","indexOf","concat","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.871ffb26.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => (\n\t<div className=\"header\">\n\t\t<div className=\"container\">\n\t\t\t<h1 className=\"header__title\">{props.title}</h1>\n\t\t\t{props.subTitle && (\n\t\t\t\t<h3 className=\"header__subtitle\">{props.subTitle}</h3>\n\t\t\t)}\n\t\t</div>\n\t</div>\n);\nexport default Header;\n","import React from \"react\";\n\nconst Action = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<button\n\t\t\t\tclassName=\"big-button\"\n\t\t\t\tonClick={props.handlePick}\n\t\t\t\tdisabled={!props.hasOptions}\n\t\t\t>\n\t\t\t\tCan't Decide?\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Action;\n","import React from \"react\";\n\nconst Option = (props) => (\n\t<div className=\"option\">\n\t\t<p className=\"option__text\">\n\t\t\t{props.count}. {props.optionText}\n\t\t</p>\n\t\t<button\n\t\t\tclassName=\"button button--link\"\n\t\t\tonClick={(e) => {\n\t\t\t\tprops.handleDeleteOption(props.optionText);\n\t\t\t}}\n\t\t>\n\t\t\tremove\n\t\t</button>\n\t</div>\n);\n\nexport default Option;\n","import React from \"react\";\nimport Option from \"./Option\";\n\nconst Options = (props) => (\n\t<div>\n\t\t<div className=\"widget--header\">\n\t\t\t<h3 className=\"widget--header__title\">Your options</h3>\n\t\t\t<button\n\t\t\t\tclassName=\"button button--link\"\n\t\t\t\tonClick={props.handleDeleteAll}\n\t\t\t>\n\t\t\t\tRemove All\n\t\t\t</button>\n\t\t</div>\n\t\t{props.options.length === 0 && (\n\t\t\t<p className=\"widget__message\">\n\t\t\t\tAdd something to make my day busier\n\t\t\t</p>\n\t\t)}\n\t\t{props.options.map((o, index) => (\n\t\t\t<Option\n\t\t\t\tkey={o}\n\t\t\t\toptionText={o}\n\t\t\t\tcount={index + 1}\n\t\t\t\thandleDeleteOption={props.handleDeleteOption}\n\t\t\t/>\n\t\t))}\n\t</div>\n);\n\nexport default Options;\n","import React from \"react\";\n\nclass AddOption extends React.Component {\n\tstate = {\n\t\terror: undefined,\n\t};\n\n\thandleAddOption = (e) => {\n\t\te.preventDefault();\n\n\t\tlet option = e.target.addOption.value.trim();\n\n\t\tconst error = this.props.handleAddOption(option);\n\n\t\tthis.setState(() => ({ error }));\n\n\t\tif (!error) {\n\t\t\tconsole.log(e.target);\n\t\t\te.target.addOption.value = \"\";\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.error && (\n\t\t\t\t\t<p className=\"add-option-error\">{this.state.error}</p>\n\t\t\t\t)}\n\t\t\t\t<form className=\"add-option\" onSubmit={this.handleAddOption}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"add-option__input\"\n\t\t\t\t\t\tinput=\"text\"\n\t\t\t\t\t\tname=\"addOption\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"button\">Add Option</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default AddOption;\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst OptionModal = (props) => (\n\t<Modal\n\t\tisOpen={!!props.selected}\n\t\tonRequestClose={props.closeModal}\n\t\tcontentLabel=\"Selected Option Modal\"\n\t\tcloseTimeoutMS={200}\n\t\tclassName=\"modal\"\n\t>\n\t\t<h3 className=\"modal__title\">Today you shall</h3>\n\t\t{props.selected && <p className=\"modal__selected\">{props.selected}</p>}\n\n\t\t<button className=\"button\" onClick={props.closeModal}>\n\t\t\tClose\n\t\t</button>\n\t</Modal>\n);\n\nexport default OptionModal;\n","import React from \"react\";\nimport Header from \"./Components/Header\";\nimport Action from \"./Components/Action\";\nimport Options from \"./Components/Options\";\nimport AddOption from \"./Components/AddOption\";\nimport OptionModal from \"./Components/Modal\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n\tstate = {\n\t\toptions: [],\n\t\tselectedOption: undefined,\n\t};\n\n\tcomponentDidMount = () => {\n\t\ttry {\n\t\t\tconst json = localStorage.getItem(\"options\");\n\t\t\tconst options = JSON.parse(json);\n\t\t\tif (options) {\n\t\t\t\tthis.setState(() => ({ options: options }));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error in componentDidMount try-catch\", error);\n\t\t}\n\t};\n\n\tcomponentDidUpdate = (prevProps, prevState) => {\n\t\tif (prevState.options.length !== this.state.options.length) {\n\t\t\tconst json = JSON.stringify(this.state.options);\n\t\t\tlocalStorage.setItem(\"options\", json);\n\t\t}\n\t};\n\n\thandlePick = () => {\n\t\tconst randomNum = Math.floor(Math.random() * this.state.options.length);\n\t\tconst selected = this.state.options[randomNum];\n\n\t\tthis.setState(() => ({ selectedOption: selected }));\n\t};\n\n\thandleDeleteOption = (optionToRemove) => {\n\t\tthis.setState((prevState) => ({\n\t\t\toptions: prevState.options.filter(\n\t\t\t\t(option) => optionToRemove !== option\n\t\t\t),\n\t\t}));\n\t};\n\n\thandleDeleteAll = () => {\n\t\tthis.setState(() => ({ options: [] }));\n\t};\n\n\thandleDeleteOption = (optionToRemove) => {\n\t\tthis.setState((prevState) => ({\n\t\t\toptions: prevState.options.filter(\n\t\t\t\t(option) => optionToRemove !== option\n\t\t\t),\n\t\t}));\n\t};\n\n\thandleAddOption = (option) => {\n\t\tif (!option) {\n\t\t\treturn \"Please enter a valid item\";\n\t\t} else if (this.state.options.indexOf(option) > -1) {\n\t\t\treturn \"This option already exists\";\n\t\t}\n\t\tthis.setState((prevState) => ({\n\t\t\toptions: prevState.options.concat(option),\n\t\t}));\n\t};\n\n\tcloseModal = () => {\n\t\tthis.setState(() => ({ selectedOption: undefined }));\n\t};\n\n\trender() {\n\t\tconst title = \"To Do: \";\n\t\tconst subTitleText = \"A To-Do list for the stylish person!\";\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<Header subTitle={subTitleText} title={title} />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Action\n\t\t\t\t\t\thasOptions={this.state.options.length > 0}\n\t\t\t\t\t\thandlePick={this.handlePick}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"widget\">\n\t\t\t\t\t\t<Options\n\t\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t\t\thandleDeleteAll={this.handleDeleteAll}\n\t\t\t\t\t\t\thandleDeleteOption={this.handleDeleteOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AddOption handleAddOption={this.handleAddOption} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<OptionModal\n\t\t\t\t\tselected={this.state.selectedOption}\n\t\t\t\t\tcloseModal={this.closeModal}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./App.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}